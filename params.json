{"name":"Mtd-console","tagline":"A console application for mt-downloader","body":"#mt-console\r\n\r\nA platform independent console application for [mt-downloader](https://github.com/tusharmath/Multi-threaded-downloader). This app is only an abstraction of what the original library can do. To get a complete list of features you should see [mt-downloader](https://github.com/tusharmath/Multi-threaded-downloader).\r\n\r\n##Installation\r\n\r\nInstall this globally using the conventional npm installation command.\r\n\r\n```bash\r\n$ npm install -g mt-console\r\n```\r\n\r\n##Usage\r\n\r\n1. You can get started by using the ```--help``` option. This lists out all the possible operations in mtd.\r\n\r\n\t```bash\r\n\t$ mtd --help\r\n\t```\r\n\r\n2. To start a new download you will have to provide a ```--url``` and a download ```--file``` path.\r\n\r\n\t```bash\r\n\t$ mtd --url=\"http://path/to/file.zip\" --file=\"/Downloads/file.zip\"\r\n\t```\r\n\r\n\t**NOTE:** Make sure you use the double quotes because some times if you have spaces in your paths it creates problems.\r\n\t\r\n3. To resume an old download, you just need to provide the path to the file with .mtd extension that is temporarily created at the time of download.\r\n\t\r\n\t```bash\r\n\t$ mtd --file=\"/Downloads/file.zip.mtd\"\r\n\t```\r\n\r\n4. You can also pass custom options such as -\r\n\r\n\t  a. ```--count``` : To set a custom number of download threads. It defaults to what is set in the [mt-downloader](https://github.com/tusharmath/Multi-threaded-downloader) library.\r\n\t  \r\n\t  b. ```--range``` : You can specify a custom download range. This feature is particularly useful when you want to download a part of a video file. Say you just want to download the later half of the file, you can then set the range as **50-100**. Its an optional parameter and defaults to **0-100**.\r\n\t  \r\n\t  c. ```--port``` : You can specify a custom HTTP port. It defaults to **80**.\r\n\t\r\n\t  d. ```--method``` : You can specify the download method such as **PUT** and **POST** by default it is set to **GET**.\r\n\r\n\t  e. ```--wd``` : Shows the current working directory. You can update this using ```--set-wd``` option.\r\n\t  \r\n\t  f. ```--set-wd``` : You can set you current working directory using this command. This is particularly helpful if you want to avoid typing the complete download path with the ```--file``` parameter. Instead you can set a common path for downloads and just specify the name of the file. The app will automatically combine the two and create the complete file path.\r\n\t\r\n\r\n\t  ```bash\r\n\t  $ mtd --set-wd=\"/Users/tusharmathur/Downloads/\"\r\n\t  $ Working directory updated to /Users/tusharmathur/Downloads/\r\n\t  \r\n\t  $ mtd --wd\r\n\t  Working directory: /Users/tusharmathur/Downloads/\r\n\t  \r\n\t  $ mtd --url=\"http://path/to/file_one.zip\" --file=\"file_one.zip\"\r\n\t  $ mtd --url=\"http://path/to/file_two.zip\" --file=\"file_two.zip\"\r\n\t  \r\n\t  ```\r\n\t  \r\n\t  Both the files *file_one.zip* and *file_two.zip* will be downloaded at the same location ```/Users/tusharmathur/Downloads/``` because that is the default download path. \r\n\t  \r\n\t  g. ```--clear-wd``` : Clears the saved working directory.\r\n\t  \r\n\t  h. ```--timeout``` : Sometimes the connections are established but are not transferring any data. Using this setting you can set the maximum amount of time in **seconds** that it should wait before quitting.\r\n\r\n\t  i. ```--auto-name``` : Generates the file name on its own by parsing the last element of the url. You will not be required to set the ```--file``` parameter while starting a new download. It will also automatically prepend the generated file name with the working directory specified by the ```--set-wd``` option.\r\n\t\t  \r\nIf you want to know more about this app you can visit [tusharm.com](http://tusharm.com/articles/mt-downloader). Hope this helps you in downloading your data more efficiently! \r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}